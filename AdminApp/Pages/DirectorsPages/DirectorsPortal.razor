@inject IAdminService AdminService

<div class="d-flex me-1">
	<a href="/" class="btn btn-outline-secondary rounded-0 me-1">Home</a>
	<button type="button" class="btn btn-outline-primary rounded-0" @onclick="()=>ChangePageType(PageType.Index)">View</button>
	<button type="button" class="btn btn-outline-primary rounded-0" @onclick="()=>ChangePageType(PageType.Create)">Create</button>
	<button type="button" class="btn btn-outline-primary rounded-0" @onclick="()=>ChangePageType(PageType.Update)">Update</button>
</div>
@if (!string.IsNullOrEmpty(Alert))
{
	<div class="d-flex">
		<div class="alert alert-danger alert-dismissible fade show" role="alert">
			<strong>@Alert</strong>
			<button type="button" @onclick="CloseAlert" class="btn-close" data-bs-dismiss="alert" aria-label="Close" ></button>
		</div>
	</div>
}
@if(Navigation == PageType.Create)
{
	<ChangeDirector Page="@Navigation" OnChange="OnChange"></ChangeDirector>
}
@if (Navigation == PageType.Index)
{
	<DirectorsIndex OnClick="OnClick" Model="Model"></DirectorsIndex>
}
@if (Navigation == PageType.Update || Navigation == PageType.Delete)
{
	<ChangeDirector Page="@Navigation" OnChange="OnChange" Model="Director"></ChangeDirector>
}

@code {
	public List<DirectorDto> Model { get; set; } = new();
	public string Alert { get; set; } = string.Empty;
	public string Navigation { get; set; } = string.Empty;
	public DirectorDto Director { get; set; } = new();

	void ChangePageType(string pageType) => Navigation = pageType;
	void CloseAlert() => Alert = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		Alert = string.Empty;
		Model = await AdminService.ReadAsync<DirectorDto>("directors");
	}
	async Task OnClick(ClickModel model)
	{
		if (model.PageType.Equals(PageType.Update) || model.PageType.Equals(PageType.Delete))
		{
			Director = await AdminService.ReadOneAsync<DirectorDto>($"directors/{model.Id}") ?? new();
			ChangePageType(model.PageType);
		}
	}
	async Task OnChange(string alert)
	{
		try
		{
			Alert = alert;
			Model = await AdminService.ReadAsync<DirectorDto>("directors");
			ChangePageType(PageType.Index);
		}
		catch
		{

			Alert = "Could not perform changes to the Directors.";
		}
	}
}
