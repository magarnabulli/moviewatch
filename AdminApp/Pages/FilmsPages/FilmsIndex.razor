@inject IAdminService AdminService
<table class="table table-bordered m-2">
	<thead>
		<tr>
			<th>Title</th>
			<th>Description</th>
			<th>Released</th>
			<th>Director</th>
			<th>Free</th>
			<th>Genres</th>
			<th>Similar films</th>
			<th>Edit</th>

		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td><strong>@item.Title</strong></td>
				<td>@item.Description.Truncate(40)</td>
				<td>@item.Released.ToShortDateString()</td>
				<td>@item.Director.Name</td>
				<td>@(item.Free ? "Free" : "")</td>
				<td>
					@foreach (var genre in item.Genres)
					{
						<li>@genre.Name</li>
					}
				</td>
				<td>
					@if (item.SimilarFilms != null)
					{
						@foreach (var film in item.SimilarFilms)
						{				
							<li>
								@film.Film.Title
							</li>
						}
					}
				</td>
				<td>
					<div class="d-flex me-1 align-content-center">
						<button class="btn btn-outline-danger rounded-2 m-1" @onclick="@(() => OnClick.InvokeAsync(new ClickModel(PageType.Delete, item.Id)))">Delete</button>
						<button class="btn btn-outline-primary rounded-2 m-1" @onclick="@(() => OnClick.InvokeAsync(new ClickModel(PageType.Update, item.Id)))">Update</button>
					</div>
				</td>
			</tr>
		}
	</tbody>
</table>

@code {
	[Parameter] public List<FilmInfoDto> Model { get; set; } = new();//för att kunna prenumerera på eventet och skicka in modellen till andra komponenten behövs [Parameter] attributet och vara public!!
	[Parameter] public EventCallback<ClickModel> OnClick { get; set; }
	[Parameter] public string Page { get; set; } = string.Empty;
}
